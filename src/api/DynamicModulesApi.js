/**
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import ConnectModules from '../model/ConnectModules';
import DynamicModulesErrorMessage from '../model/DynamicModulesErrorMessage';

/**
* DynamicModules service.
* @module api/DynamicModulesApi
* @version 1.0.0
*/
export default class DynamicModulesApi {

    /**
    * Constructs a new DynamicModulesApi. 
    * @alias module:api/DynamicModulesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the dynamicModulesResourceGetModulesGet operation.
     * @callback module:api/DynamicModulesApi~dynamicModulesResourceGetModulesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ConnectModules} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get modules
     * Returns all modules registered dynamically by the calling app.  **[Permissions](#permissions) required:** Only Connect apps can make this request.
     * @param {module:api/DynamicModulesApi~dynamicModulesResourceGetModulesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ConnectModules}
     */
    dynamicModulesResourceGetModulesGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*', 'message'];
      let returnType = ConnectModules;

      return this.apiClient.callApi(
        '/atlassian-connect/1/app/module/dynamic', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the dynamicModulesResourceRegisterModulesPost operation.
     * @callback module:api/DynamicModulesApi~dynamicModulesResourceRegisterModulesPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Register modules
     * Registers a list of modules. For the list of modules that support dynamic registration, see [Dynamic modules](https://developer.atlassian.com/cloud/confluence/dynamic-modules/).  **[Permissions](#permissions) required:** Only Connect apps can make this request.
     * @param {module:api/DynamicModulesApi~dynamicModulesResourceRegisterModulesPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    dynamicModulesResourceRegisterModulesPost(body, callback) {
      let postBody = body;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['*/*', 'message'];
      let returnType = null;

      return this.apiClient.callApi(
        '/atlassian-connect/1/app/module/dynamic', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the dynamicModulesResourceRemoveModulesDelete operation.
     * @callback module:api/DynamicModulesApi~dynamicModulesResourceRemoveModulesDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove modules
     * Remove all or a list of modules registered by the calling app.  **[Permissions](#permissions) required:** Only Connect apps can make this request.
     * @param {Object} opts Optional parameters
     * @param {module:api/DynamicModulesApi~dynamicModulesResourceRemoveModulesDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    dynamicModulesResourceRemoveModulesDelete(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'moduleKey': this.apiClient.buildCollectionParam(opts['moduleKey'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*', 'message'];
      let returnType = null;

      return this.apiClient.callApi(
        '/atlassian-connect/1/app/module/dynamic', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
