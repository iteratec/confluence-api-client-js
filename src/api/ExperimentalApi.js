/*jshint esversion: 9 */

/**
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import CQLPersonalDataConvertedQueries from '../model/CQLPersonalDataConvertedQueries';
import CQLPersonalDataMigrationRequest from '../model/CQLPersonalDataMigrationRequest';
import SpacePermissionV2 from '../model/SpacePermissionV2';

/**
* Experimental service.
* @module api/ExperimentalApi
* @version 1.0.0
*/
export default class ExperimentalApi {

    /**
    * Constructs a new ExperimentalApi.
    * @alias module:api/ExperimentalApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the confluenceExperimentalCQLResourceCqlPDCleanerPost operation.
     * @callback module:api/ExperimentalApi~confluenceExperimentalCQLResourceCqlPDCleanerPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CQLPersonalDataConvertedQueries} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Convert user identifiers to account IDs in CQL queries
     * Converts one or more CQL queries with user identifiers (username or user key) to equivalent CQL queries with account IDs.  You may wish to use this operation if your system stores CQL queries and you want to make them GDPR-compliant. For more information about GDPR-related changes, see the [migration guide](https://developer.atlassian.com/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/).  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: None
     * @param {module:api/ExperimentalApi~confluenceExperimentalCQLResourceCqlPDCleanerPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CQLPersonalDataConvertedQueries}
     */
    confluenceExperimentalCQLResourceCqlPDCleanerPost(body, callback) {
      let postBody = body;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CQLPersonalDataConvertedQueries;

      return this.apiClient.callApi(
        '/api/experimental/cql/pdcleaner', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the confluenceSpacePermissionResourceAddPermission operation.
     * @callback module:api/ExperimentalApi~confluenceSpacePermissionResourceAddPermissionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SpacePermissionV2} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add new permission to space
     * Adds new permission to space.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: &#x27;Admin&#x27; permission for the space.
     * @param {module:api/ExperimentalApi~confluenceSpacePermissionResourceAddPermissionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SpacePermissionV2}
     */
    confluenceSpacePermissionResourceAddPermission(body, spaceKey, callback) {
      let postBody = body;

      let pathParams = {
        'spaceKey': spaceKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SpacePermissionV2;

      return this.apiClient.callApi(
        '/api/space/{spaceKey}/permission', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the confluenceSpacePermissionResourceRemovePermission operation.
     * @callback module:api/ExperimentalApi~confluenceSpacePermissionResourceRemovePermissionCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove a space permission
     * Removes a space permission. Note that removing Read Space permission for a user or group will remove all the space permissions for that user or group.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: &#x27;Admin&#x27; permission for the space.
     * @param {module:api/ExperimentalApi~confluenceSpacePermissionResourceRemovePermissionCallback} callback The callback function, accepting three arguments: error, data, response
     */
    confluenceSpacePermissionResourceRemovePermission(spaceKey, id, callback) {
      let postBody = null;

      let pathParams = {
        'spaceKey': spaceKey,
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/api/space/{spaceKey}/permission/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
