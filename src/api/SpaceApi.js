/*jshint esversion: 9 */

/**
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import ContentArray from '../model/ContentArray';
import Space from '../model/Space';
import SpaceArray from '../model/SpaceArray';
import SpaceCreate from '../model/SpaceCreate';
import SpacePrivateCreate from '../model/SpacePrivateCreate';
import SpaceProperty from '../model/SpaceProperty';
import SpacePropertyArray from '../model/SpacePropertyArray';
import SpacePropertyCreate from '../model/SpacePropertyCreate';
import SpacePropertyCreateNoKey from '../model/SpacePropertyCreateNoKey';
import SpacePropertyUpdate from '../model/SpacePropertyUpdate';
import SpaceSettings from '../model/SpaceSettings';
import SpaceSettingsUpdate from '../model/SpaceSettingsUpdate';
import SpaceUpdate from '../model/SpaceUpdate';
import SpaceWatchArray from '../model/SpaceWatchArray';
import Theme from '../model/Theme';
import ThemeUpdate from '../model/ThemeUpdate';

/**
* Space service.
* @module api/SpaceApi
* @version 1.0.0
*/
export default class SpaceApi {

    /**
    * Constructs a new SpaceApi.
    * @alias module:api/SpaceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the confluenceSpacePropertyResourceCreateSpacePropertyForKeyPost operation.
     * @callback module:api/SpaceApi~confluenceSpacePropertyResourceCreateSpacePropertyForKeyPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SpaceProperty} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create space property for key
     * Creates a new space property. This is the same as &#x60;POST /api/space/{spaceKey}/property&#x60; but the key for the property is passed as a path parameter, rather than in the request body.  **[Permissions required](https://confluence.atlassian.com/x/_AozKw)**: ‘Admin’ permission for the space.
     * @param {module:api/SpaceApi~confluenceSpacePropertyResourceCreateSpacePropertyForKeyPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SpaceProperty}
     */
    confluenceSpacePropertyResourceCreateSpacePropertyForKeyPost(body, spaceKey, key, callback) {
      let postBody = body;

      let pathParams = {
        'spaceKey': spaceKey,
        'key': key
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oAuthDefinitions'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SpaceProperty;

      return this.apiClient.callApi(
        '/api/space/{spaceKey}/property/{key}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the confluenceSpacePropertyResourceCreateSpacePropertyPost operation.
     * @callback module:api/SpaceApi~confluenceSpacePropertyResourceCreateSpacePropertyPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SpaceProperty} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create space property
     * Creates a new space property.  **[Permissions required](https://confluence.atlassian.com/x/_AozKw)**: ‘Admin’ permission for the space.
     * @param {module:api/SpaceApi~confluenceSpacePropertyResourceCreateSpacePropertyPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SpaceProperty}
     */
    confluenceSpacePropertyResourceCreateSpacePropertyPost(body, spaceKey, callback) {
      let postBody = body;

      let pathParams = {
        'spaceKey': spaceKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oAuthDefinitions'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SpaceProperty;

      return this.apiClient.callApi(
        '/api/space/{spaceKey}/property', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the confluenceSpacePropertyResourceDeleteSpacePropertyDelete operation.
     * @callback module:api/SpaceApi~confluenceSpacePropertyResourceDeleteSpacePropertyDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete space property
     * Deletes a space property.  **[Permissions required](https://confluence.atlassian.com/x/_AozKw)**: ‘Admin’ permission for the space.
     * @param {module:api/SpaceApi~confluenceSpacePropertyResourceDeleteSpacePropertyDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    confluenceSpacePropertyResourceDeleteSpacePropertyDelete(spaceKey, key, callback) {
      let postBody = null;

      let pathParams = {
        'spaceKey': spaceKey,
        'key': key
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oAuthDefinitions'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/api/space/{spaceKey}/property/{key}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the confluenceSpacePropertyResourceGetSpacePropertiesGet operation.
     * @callback module:api/SpaceApi~confluenceSpacePropertyResourceGetSpacePropertiesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SpacePropertyArray} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get space properties
     * Returns all properties for the given space. Space properties are a key-value storage associated with a space.  **[Permissions required](https://confluence.atlassian.com/x/_AozKw)**: ‘View’ permission for the space.
     * @param {Object} opts Optional parameters
     * @param {module:api/SpaceApi~confluenceSpacePropertyResourceGetSpacePropertiesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SpacePropertyArray}
     */
    confluenceSpacePropertyResourceGetSpacePropertiesGet(spaceKey, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'spaceKey': spaceKey
      };
      let queryParams = {
        'expand': this.apiClient.buildCollectionParam(opts.expand, 'multi'),
        'start': opts.start,
        'limit': opts.limit
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oAuthDefinitions'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SpacePropertyArray;

      return this.apiClient.callApi(
        '/api/space/{spaceKey}/property', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the confluenceSpacePropertyResourceGetSpacePropertyGet operation.
     * @callback module:api/SpaceApi~confluenceSpacePropertyResourceGetSpacePropertyGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SpaceProperty} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get space property
     * Returns a space property.  **[Permissions required](https://confluence.atlassian.com/x/_AozKw)**: ‘View’ permission for the space.
     * @param {Object} opts Optional parameters
     * @param {module:api/SpaceApi~confluenceSpacePropertyResourceGetSpacePropertyGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SpaceProperty}
     */
    confluenceSpacePropertyResourceGetSpacePropertyGet(spaceKey, key, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'spaceKey': spaceKey,
        'key': key
      };
      let queryParams = {
        'expand': this.apiClient.buildCollectionParam(opts.expand, 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oAuthDefinitions'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SpaceProperty;

      return this.apiClient.callApi(
        '/api/space/{spaceKey}/property/{key}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the confluenceSpacePropertyResourceUpdateSpacePropertyPut operation.
     * @callback module:api/SpaceApi~confluenceSpacePropertyResourceUpdateSpacePropertyPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SpaceProperty} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update space property
     * Updates a space property. Note, you cannot update the key of a space property, only the value.  **[Permissions required](https://confluence.atlassian.com/x/_AozKw)**: ‘Admin’ permission for the space.
     * @param {module:api/SpaceApi~confluenceSpacePropertyResourceUpdateSpacePropertyPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SpaceProperty}
     */
    confluenceSpacePropertyResourceUpdateSpacePropertyPut(body, spaceKey, key, callback) {
      let postBody = body;

      let pathParams = {
        'spaceKey': spaceKey,
        'key': key
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oAuthDefinitions'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SpaceProperty;

      return this.apiClient.callApi(
        '/api/space/{spaceKey}/property/{key}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the confluenceSpaceResourceCreatePrivateSpacePost operation.
     * @callback module:api/SpaceApi~confluenceSpaceResourceCreatePrivateSpacePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Space} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create private space
     * Creates a new space that is only visible to the creator. This method is the same as the [Create space](#api-space-post) method with permissions set to the current user only. Note, currently you cannot set space labels when creating a space.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: &#x27;Create Space(s)&#x27; global permission.
     * @param {module:api/SpaceApi~confluenceSpaceResourceCreatePrivateSpacePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Space}
     */
    confluenceSpaceResourceCreatePrivateSpacePost(body, callback) {
      let postBody = body;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oAuthDefinitions'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Space;

      return this.apiClient.callApi(
        '/api/space/_private', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the confluenceSpaceResourceCreateSpacePost operation.
     * @callback module:api/SpaceApi~confluenceSpaceResourceCreateSpacePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Space} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create space
     * Creates a new space. Note, currently you cannot set space labels when creating a space.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: &#x27;Create Space(s)&#x27; global permission.
     * @param {module:api/SpaceApi~confluenceSpaceResourceCreateSpacePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Space}
     */
    confluenceSpaceResourceCreateSpacePost(body, callback) {
      let postBody = body;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oAuthDefinitions'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Space;

      return this.apiClient.callApi(
        '/api/space', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the confluenceSpaceResourceDeleteSpaceDelete operation.
     * @callback module:api/SpaceApi~confluenceSpaceResourceDeleteSpaceDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete space
     * Deletes a space. Note, the space will be deleted in a long running task. Therefore, the space may not be deleted yet when this method has returned. Clients should poll the status link that is returned in the response until the task completes.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: &#x27;Admin&#x27; permission for the space.
     * @param {module:api/SpaceApi~confluenceSpaceResourceDeleteSpaceDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    confluenceSpaceResourceDeleteSpaceDelete(spaceKey, callback) {
      let postBody = null;

      let pathParams = {
        'spaceKey': spaceKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oAuthDefinitions'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/api/space/{spaceKey}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the confluenceSpaceResourceGetContentByTypeForSpaceGet operation.
     * @callback module:api/SpaceApi~confluenceSpaceResourceGetContentByTypeForSpaceGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContentArray} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get content by type for space
     * Returns all content of a given type, in a space. The returned content is ordered by content ID in ascending order.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: &#x27;View&#x27; permission for the space. Note, the returned list will only contain content that the current user has permission to view.
     * @param {Object} opts Optional parameters
     * @param {module:api/SpaceApi~confluenceSpaceResourceGetContentByTypeForSpaceGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContentArray}
     */
    confluenceSpaceResourceGetContentByTypeForSpaceGet(spaceKey, type, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'spaceKey': spaceKey,
        'type': type
      };
      let queryParams = {
        'depth': opts.depth,
        'expand': this.apiClient.buildCollectionParam(opts.expand, 'multi'),
        'start': opts.start,
        'limit': opts.limit
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oAuthDefinitions'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ContentArray;

      return this.apiClient.callApi(
        '/api/space/{spaceKey}/content/{type}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the confluenceSpaceResourceGetContentForSpaceGet operation.
     * @callback module:api/SpaceApi~confluenceSpaceResourceGetContentForSpaceGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContentArray} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get content for space
     * Returns all content in a space. The returned content is grouped by type (pages then blogposts), then ordered by content ID in ascending order.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: &#x27;View&#x27; permission for the space. Note, the returned list will only contain content that the current user has permission to view.
     * @param {Object} opts Optional parameters
     * @param {module:api/SpaceApi~confluenceSpaceResourceGetContentForSpaceGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContentArray}
     */
    confluenceSpaceResourceGetContentForSpaceGet(spaceKey, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'spaceKey': spaceKey
      };
      let queryParams = {
        'depth': opts.depth,
        'expand': this.apiClient.buildCollectionParam(opts.expand, 'multi'),
        'start': opts.start,
        'limit': opts.limit
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oAuthDefinitions'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ContentArray;

      return this.apiClient.callApi(
        '/api/space/{spaceKey}/content', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the confluenceSpaceResourceGetSpaceGet operation.
     * @callback module:api/SpaceApi~confluenceSpaceResourceGetSpaceGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Space} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get space
     * Returns a space. This includes information like the name, description, and permissions, but not the content in the space.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: &#x27;View&#x27; permission for the space.
     * @param {Object} opts Optional parameters
     * @param {module:api/SpaceApi~confluenceSpaceResourceGetSpaceGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Space}
     */
    confluenceSpaceResourceGetSpaceGet(spaceKey, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'spaceKey': spaceKey
      };
      let queryParams = {
        'expand': this.apiClient.buildCollectionParam(opts.expand, 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oAuthDefinitions'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Space;

      return this.apiClient.callApi(
        '/api/space/{spaceKey}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the confluenceSpaceResourceGetSpaceSettingsGet operation.
     * @callback module:api/SpaceApi~confluenceSpaceResourceGetSpaceSettingsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SpaceSettings} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get space settings
     * Returns the settings of a space. Currently only the &#x60;routeOverrideEnabled&#x60; setting can be returned.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: &#x27;View&#x27; permission for the space.
     * @param {module:api/SpaceApi~confluenceSpaceResourceGetSpaceSettingsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SpaceSettings}
     */
    confluenceSpaceResourceGetSpaceSettingsGet(spaceKey, callback) {
      let postBody = null;

      let pathParams = {
        'spaceKey': spaceKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oAuthDefinitions'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SpaceSettings;

      return this.apiClient.callApi(
        '/api/space/{spaceKey}/settings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the confluenceSpaceResourceGetSpacesGet operation.
     * @callback module:api/SpaceApi~confluenceSpaceResourceGetSpacesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SpaceArray} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get spaces
     * Returns all spaces. The returned spaces are ordered alphabetically in ascending order by space key.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission). Note, the returned list will only contain spaces that the current user has permission to view.
     * @param {Object} opts Optional parameters
     * @param {module:api/SpaceApi~confluenceSpaceResourceGetSpacesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SpaceArray}
     */
    confluenceSpaceResourceGetSpacesGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'spaceKey': this.apiClient.buildCollectionParam(opts.spaceKey, 'multi'),
        'spaceId': this.apiClient.buildCollectionParam(opts.spaceId, 'multi'),
        'type': opts.type,
        'status': opts.status,
        'label': this.apiClient.buildCollectionParam(opts.label, 'multi'),
        'favourite': opts.favourite,
        'favouriteUserKey': opts.favouriteUserKey,
        'expand': this.apiClient.buildCollectionParam(opts.expand, 'multi'),
        'start': opts.start,
        'limit': opts.limit
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oAuthDefinitions'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SpaceArray;

      return this.apiClient.callApi(
        '/api/space', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the confluenceSpaceResourceGetWatchersForSpaceGet operation.
     * @callback module:api/SpaceApi~confluenceSpaceResourceGetWatchersForSpaceGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SpaceWatchArray} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of watchers of a space
     * Returns a list of watchers of a space
     * @param {Object} opts Optional parameters
     * @param {module:api/SpaceApi~confluenceSpaceResourceGetWatchersForSpaceGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SpaceWatchArray}
     */
    confluenceSpaceResourceGetWatchersForSpaceGet(spaceKey, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'spaceKey': spaceKey
      };
      let queryParams = {
        'start': opts.start,
        'limit': opts.limit
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SpaceWatchArray;

      return this.apiClient.callApi(
        '/api/space/{spaceKey}/watch', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the confluenceSpaceResourceUpdateSpacePut operation.
     * @callback module:api/SpaceApi~confluenceSpaceResourceUpdateSpacePutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Space} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update space
     * Updates the name, description, or homepage of a space.  -   For security reasons, permissions cannot be updated via the API and must be changed via the user interface instead. -   Currently you cannot set space labels when updating a space.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: &#x27;Admin&#x27; permission for the space.
     * @param {module:api/SpaceApi~confluenceSpaceResourceUpdateSpacePutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Space}
     */
    confluenceSpaceResourceUpdateSpacePut(body, spaceKey, callback) {
      let postBody = body;

      let pathParams = {
        'spaceKey': spaceKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oAuthDefinitions'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Space;

      return this.apiClient.callApi(
        '/api/space/{spaceKey}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the confluenceSpaceResourceUpdateSpaceSettingsPut operation.
     * @callback module:api/SpaceApi~confluenceSpaceResourceUpdateSpaceSettingsPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SpaceSettings} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update space settings
     * Updates the settings for a space. Currently only the &#x60;routeOverrideEnabled&#x60; setting can be updated.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: &#x27;Admin&#x27; permission for the space.
     * @param {module:api/SpaceApi~confluenceSpaceResourceUpdateSpaceSettingsPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SpaceSettings}
     */
    confluenceSpaceResourceUpdateSpaceSettingsPut(body, spaceKey, callback) {
      let postBody = body;

      let pathParams = {
        'spaceKey': spaceKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oAuthDefinitions'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SpaceSettings;

      return this.apiClient.callApi(
        '/api/space/{spaceKey}/settings', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the confluenceSpaceThemeResourceGetSpaceThemeGet operation.
     * @callback module:api/SpaceApi~confluenceSpaceThemeResourceGetSpaceThemeGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Theme} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get space theme
     * Returns the theme selected for a space, if one is set. If no space theme is set, this means that the space is inheriting the global look and feel settings.  **[Permissions required](https://confluence.atlassian.com/x/_AozKw)**: ‘View’ permission for the space.
     * @param {module:api/SpaceApi~confluenceSpaceThemeResourceGetSpaceThemeGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Theme}
     */
    confluenceSpaceThemeResourceGetSpaceThemeGet(spaceKey, callback) {
      let postBody = null;

      let pathParams = {
        'spaceKey': spaceKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oAuthDefinitions'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Theme;

      return this.apiClient.callApi(
        '/api/space/{spaceKey}/theme', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the confluenceSpaceThemeResourceResetSpaceThemeDelete operation.
     * @callback module:api/SpaceApi~confluenceSpaceThemeResourceResetSpaceThemeDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reset space theme
     * Resets the space theme. This means that the space will inherit the global look and feel settings  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: &#x27;Admin&#x27; permission for the space.
     * @param {module:api/SpaceApi~confluenceSpaceThemeResourceResetSpaceThemeDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    confluenceSpaceThemeResourceResetSpaceThemeDelete(spaceKey, callback) {
      let postBody = null;

      let pathParams = {
        'spaceKey': spaceKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oAuthDefinitions'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/api/space/{spaceKey}/theme', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the confluenceSpaceThemeResourceSetSpaceThemePut operation.
     * @callback module:api/SpaceApi~confluenceSpaceThemeResourceSetSpaceThemePutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Theme} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Set space theme
     * Sets the theme for a space. Note, if you want to reset the space theme to the default Confluence theme, use the &#x27;Reset space theme&#x27; method instead of this method.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: &#x27;Admin&#x27; permission for the space.
     * @param {module:api/SpaceApi~confluenceSpaceThemeResourceSetSpaceThemePutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Theme}
     */
    confluenceSpaceThemeResourceSetSpaceThemePut(body, spaceKey, callback) {
      let postBody = body;

      let pathParams = {
        'spaceKey': spaceKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oAuthDefinitions'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Theme;

      return this.apiClient.callApi(
        '/api/space/{spaceKey}/theme', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
