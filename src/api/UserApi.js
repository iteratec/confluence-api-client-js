/*jshint esversion: 9 */

/**
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import AccountIdEmailRecord from '../model/AccountIdEmailRecord';
import AccountIdEmailRecordArray from '../model/AccountIdEmailRecordArray';
import BulkUserLookupArray from '../model/BulkUserLookupArray';
import GroupArray from '../model/GroupArray';
import MigratedUserArray from '../model/MigratedUserArray';
import User from '../model/User';
import UserAnonymous from '../model/UserAnonymous';
import UserWatch from '../model/UserWatch';

/**
* User service.
* @module api/UserApi
* @version 1.0.0
*/
export default class UserApi {

    /**
    * Constructs a new UserApi.
    * @alias module:api/UserApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the comAtlassianConfluencePluginsRestapiResourcesUserEmailResourceGetPrivacyUnsafeUserEmailBulkGet operation.
     * @callback module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserEmailResourceGetPrivacyUnsafeUserEmailBulkGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AccountIdEmailRecordArray} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Bulk fetch of users&#x27; email addresses
     * Returns user email addresses for a set of accountIds. This API is only available to apps approved by Atlassian, according to these [guidelines](https://community.developer.atlassian.com/t/guidelines-for-requesting-access-to-email-address/27603).  Any accounts which are not available will not be included in the result.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param {module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserEmailResourceGetPrivacyUnsafeUserEmailBulkGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AccountIdEmailRecordArray}
     */
    comAtlassianConfluencePluginsRestapiResourcesUserEmailResourceGetPrivacyUnsafeUserEmailBulkGet(accountId, callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'accountId': this.apiClient.buildCollectionParam(accountId, 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AccountIdEmailRecordArray;

      return this.apiClient.callApi(
        '/api/user/email/bulk', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the comAtlassianConfluencePluginsRestapiResourcesUserEmailResourceGetPrivacyUnsafeUserEmailGet operation.
     * @callback module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserEmailResourceGetPrivacyUnsafeUserEmailGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AccountIdEmailRecord} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a user&#x27;s email
     * Returns a user&#x27;s email address. This API is only available to apps approved by Atlassian, according to these [guidelines](https://community.developer.atlassian.com/t/guidelines-for-requesting-access-to-email-address/27603).  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param {module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserEmailResourceGetPrivacyUnsafeUserEmailGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AccountIdEmailRecord}
     */
    comAtlassianConfluencePluginsRestapiResourcesUserEmailResourceGetPrivacyUnsafeUserEmailGet(accountId, callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'accountId': accountId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AccountIdEmailRecord;

      return this.apiClient.callApi(
        '/api/user/email', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the comAtlassianConfluencePluginsRestapiResourcesUserResourceGetAnonymousUserGet operation.
     * @callback module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserResourceGetAnonymousUserGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UserAnonymous} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get anonymous user
     * Returns information about how anonymous users are represented, like the profile picture and display name.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param {Object} opts Optional parameters
     * @param {module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserResourceGetAnonymousUserGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UserAnonymous}
     */
    comAtlassianConfluencePluginsRestapiResourcesUserResourceGetAnonymousUserGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'expand': this.apiClient.buildCollectionParam(opts.expand, 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UserAnonymous;

      return this.apiClient.callApi(
        '/api/user/anonymous', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the comAtlassianConfluencePluginsRestapiResourcesUserResourceGetBulkUserLookup operation.
     * @callback module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserResourceGetBulkUserLookupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BulkUserLookupArray} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get multiple users using ids
     * Returns user details for the ids provided in request.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param {Object} opts Optional parameters
     * @param {module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserResourceGetBulkUserLookupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BulkUserLookupArray}
     */
    comAtlassianConfluencePluginsRestapiResourcesUserResourceGetBulkUserLookup(accountId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'accountId': accountId,
        'expand': this.apiClient.buildCollectionParam(opts.expand, 'multi'),
        'limit': opts.limit
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BulkUserLookupArray;

      return this.apiClient.callApi(
        '/api/user/bulk', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the comAtlassianConfluencePluginsRestapiResourcesUserResourceGetBulkUserMigration operation.
     * @callback module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserResourceGetBulkUserMigrationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MigratedUserArray} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get accountIds for users
     * Returns the accountIds for the users specified in the key or username parameters. Note that multiple key and username parameters can be specified.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: &#x27;Confluence Administrator&#x27; global permission if specifying a user, otherwise permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param {Object} opts Optional parameters
     * @param {module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserResourceGetBulkUserMigrationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MigratedUserArray}
     */
    comAtlassianConfluencePluginsRestapiResourcesUserResourceGetBulkUserMigration(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'key': this.apiClient.buildCollectionParam(opts.key, 'multi'),
        'username': this.apiClient.buildCollectionParam(opts.username, 'multi'),
        'start': opts.start,
        'limit': opts.limit
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MigratedUserArray;

      return this.apiClient.callApi(
        '/api/user/bulk/migration', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the comAtlassianConfluencePluginsRestapiResourcesUserResourceGetCurrentUserGet operation.
     * @callback module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserResourceGetCurrentUserGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/User} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get current user
     * Returns the currently logged-in user. This includes information about the user, like the display name, userKey, account ID, profile picture, and more.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param {Object} opts Optional parameters
     * @param {module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserResourceGetCurrentUserGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/User}
     */
    comAtlassianConfluencePluginsRestapiResourcesUserResourceGetCurrentUserGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'expand': this.apiClient.buildCollectionParam(opts.expand, 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = User;

      return this.apiClient.callApi(
        '/api/user/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the comAtlassianConfluencePluginsRestapiResourcesUserResourceGetGroupMembershipsForUserGet operation.
     * @callback module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserResourceGetGroupMembershipsForUserGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GroupArray} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get group memberships for user
     * Returns the groups that a user is a member of.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param {Object} opts Optional parameters
     * @param {module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserResourceGetGroupMembershipsForUserGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GroupArray}
     */
    comAtlassianConfluencePluginsRestapiResourcesUserResourceGetGroupMembershipsForUserGet(accountId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'key': opts.key,
        'username': opts.username,
        'accountId': accountId,
        'start': opts.start,
        'limit': opts.limit
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GroupArray;

      return this.apiClient.callApi(
        '/api/user/memberof', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the comAtlassianConfluencePluginsRestapiResourcesUserResourceGetUserGet operation.
     * @callback module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserResourceGetUserGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/User} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get user
     * Returns a user. This includes information about the user, such as the display name, account ID, profile picture, and more. The information returned may be restricted by the user&#x27;s profile visibility settings.  **Note:** to add, edit, or delete users in your organization, see the [user management REST API](/cloud/admin/user-management/about/).  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: Permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param {Object} opts Optional parameters
     * @param {module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserResourceGetUserGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/User}
     */
    comAtlassianConfluencePluginsRestapiResourcesUserResourceGetUserGet(accountId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'key': opts.key,
        'username': opts.username,
        'accountId': accountId,
        'expand': this.apiClient.buildCollectionParam(opts.expand, 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = User;

      return this.apiClient.callApi(
        '/api/user', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceAddContentWatcherPost operation.
     * @callback module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceAddContentWatcherPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add content watcher
     * Adds a user as a watcher to a piece of content. Choose the user by doing one of the following:  - Specify a user via a query parameter: Use the &#x60;accountId&#x60; to identify the user. - Do not specify a user: The currently logged-in user will be used.  Note, you must add the &#x60;X-Atlassian-Token: no-check&#x60; header when making a request, as this operation has XSRF protection.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: &#x27;Confluence Administrator&#x27; global permission if specifying a user, otherwise permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param {Object} opts Optional parameters
     * @param {module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceAddContentWatcherPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceAddContentWatcherPost(contentId, accountId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'contentId': contentId
      };
      let queryParams = {
        'key': opts.key,
        'username': opts.username,
        'accountId': accountId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oAuthDefinitions'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/api/user/watch/content/{contentId}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceAddLabelWatcherPost operation.
     * @callback module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceAddLabelWatcherPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add label watcher
     * Adds a user as a watcher to a label. Choose the user by doing one of the following:  - Specify a user via a query parameter: Use the &#x60;accountId&#x60; to identify the user. - Do not specify a user: The currently logged-in user will be used.  Note, you must add the &#x60;X-Atlassian-Token: no-check&#x60; header when making a request, as this operation has XSRF protection.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: &#x27;Confluence Administrator&#x27; global permission if specifying a user, otherwise permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param {Object} opts Optional parameters
     * @param {module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceAddLabelWatcherPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceAddLabelWatcherPost(labelName, accountId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'labelName': labelName
      };
      let queryParams = {
        'key': opts.key,
        'username': opts.username,
        'accountId': accountId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oAuthDefinitions'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/api/user/watch/label/{labelName}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceAddSpaceWatcherPost operation.
     * @callback module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceAddSpaceWatcherPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add space watcher
     * Adds a user as a watcher to a space. Choose the user by doing one of the following:  - Specify a user via a query parameter: Use the &#x60;accountId&#x60; to identify the user. - Do not specify a user: The currently logged-in user will be used.  Note, you must add the &#x60;X-Atlassian-Token: no-check&#x60; header when making a request, as this operation has XSRF protection.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: &#x27;Confluence Administrator&#x27; global permission if specifying a user, otherwise permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param {Object} opts Optional parameters
     * @param {module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceAddSpaceWatcherPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceAddSpaceWatcherPost(spaceKey, accountId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'spaceKey': spaceKey
      };
      let queryParams = {
        'key': opts.key,
        'username': opts.username,
        'accountId': accountId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oAuthDefinitions'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/api/user/watch/space/{spaceKey}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceGetContentWatchStatusGet operation.
     * @callback module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceGetContentWatchStatusGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UserWatch} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get content watch status
     * Returns whether a user is watching a piece of content. Choose the user by doing one of the following:  - Specify a user via a query parameter: Use the &#x60;accountId&#x60; to identify the user. - Do not specify a user: The currently logged-in user will be used.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: &#x27;Confluence Administrator&#x27; global permission if specifying a user, otherwise permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param {Object} opts Optional parameters
     * @param {module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceGetContentWatchStatusGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UserWatch}
     */
    comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceGetContentWatchStatusGet(contentId, accountId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'contentId': contentId
      };
      let queryParams = {
        'key': opts.key,
        'username': opts.username,
        'accountId': accountId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oAuthDefinitions'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UserWatch;

      return this.apiClient.callApi(
        '/api/user/watch/content/{contentId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceIsWatchingLabelGet operation.
     * @callback module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceIsWatchingLabelGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UserWatch} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get label watch status
     * Returns whether a user is watching a label. Choose the user by doing one of the following:  - Specify a user via a query parameter: Use the &#x60;accountId&#x60; to identify the user. - Do not specify a user: The currently logged-in user will be used.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: &#x27;Confluence Administrator&#x27; global permission if specifying a user, otherwise permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param {Object} opts Optional parameters
     * @param {module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceIsWatchingLabelGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UserWatch}
     */
    comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceIsWatchingLabelGet(labelName, accountId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'labelName': labelName
      };
      let queryParams = {
        'key': opts.key,
        'username': opts.username,
        'accountId': accountId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oAuthDefinitions'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UserWatch;

      return this.apiClient.callApi(
        '/api/user/watch/label/{labelName}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceIsWatchingSpaceGet operation.
     * @callback module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceIsWatchingSpaceGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UserWatch} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get space watch status
     * Returns whether a user is watching a space. Choose the user by doing one of the following:  - Specify a user via a query parameter: Use the &#x60;accountId&#x60; to identify the user. - Do not specify a user: The currently logged-in user will be used.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: &#x27;Confluence Administrator&#x27; global permission if specifying a user, otherwise permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param {Object} opts Optional parameters
     * @param {module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceIsWatchingSpaceGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UserWatch}
     */
    comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceIsWatchingSpaceGet(spaceKey, accountId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'spaceKey': spaceKey
      };
      let queryParams = {
        'key': opts.key,
        'username': opts.username,
        'accountId': accountId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oAuthDefinitions'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UserWatch;

      return this.apiClient.callApi(
        '/api/user/watch/space/{spaceKey}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceRemoveContentWatcherDelete operation.
     * @callback module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceRemoveContentWatcherDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove content watcher
     * Removes a user as a watcher from a piece of content. Choose the user by doing one of the following:  - Specify a user via a query parameter: Use the &#x60;accountId&#x60; to identify the user. - Do not specify a user: The currently logged-in user will be used.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: &#x27;Confluence Administrator&#x27; global permission if specifying a user, otherwise permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param {Object} opts Optional parameters
     * @param {module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceRemoveContentWatcherDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceRemoveContentWatcherDelete(contentId, accountId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'contentId': contentId
      };
      let queryParams = {
        'key': opts.key,
        'username': opts.username,
        'accountId': accountId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oAuthDefinitions'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/api/user/watch/content/{contentId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceRemoveLabelWatcherDelete operation.
     * @callback module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceRemoveLabelWatcherDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove label watcher
     * Removes a user as a watcher from a label. Choose the user by doing one of the following:  - Specify a user via a query parameter: Use the &#x60;accountId&#x60; to identify the user. - Do not specify a user: The currently logged-in user will be used.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: &#x27;Confluence Administrator&#x27; global permission if specifying a user, otherwise permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param {Object} opts Optional parameters
     * @param {module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceRemoveLabelWatcherDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceRemoveLabelWatcherDelete(labelName, accountId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'labelName': labelName
      };
      let queryParams = {
        'key': opts.key,
        'username': opts.username,
        'accountId': accountId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oAuthDefinitions'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/api/user/watch/label/{labelName}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceRemoveSpaceWatchDelete operation.
     * @callback module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceRemoveSpaceWatchDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove space watch
     * Removes a user as a watcher from a space. Choose the user by doing one of the following:  - Specify a user via a query parameter: Use the &#x60;accountId&#x60; to identify the user. - Do not specify a user: The currently logged-in user will be used.  **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**: &#x27;Confluence Administrator&#x27; global permission if specifying a user, otherwise permission to access the Confluence site (&#x27;Can use&#x27; global permission).
     * @param {Object} opts Optional parameters
     * @param {module:api/UserApi~comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceRemoveSpaceWatchDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    comAtlassianConfluencePluginsRestapiResourcesUserWatchResourceRemoveSpaceWatchDelete(spaceKey, accountId, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'spaceKey': spaceKey
      };
      let queryParams = {
        'key': opts.key,
        'username': opts.username,
        'accountId': accountId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oAuthDefinitions'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/api/user/watch/space/{spaceKey}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
