/**
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Icon from './Icon';
import OperationCheckResult from './OperationCheckResult';
import UserDetails from './UserDetails';

/**
* The WatchUser model module.
* @module model/WatchUser
* @version 1.0.0
*/
export default class WatchUser {
    /**
    * Constructs a new <code>WatchUser</code>.
    * This essentially the same as the &#x60;User&#x60; object, but no &#x60;_links&#x60; property and no &#x60;_expandable&#x60; property (therefore, different required fields).
    * @alias module:model/WatchUser
    * @class
    * @param type {String} 
    * @param accountId {String} The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.
    * @param profilePicture {module:model/Icon} 
    * @param displayName {String} 
    * @param operations {Array.<module:model/OperationCheckResult>} 
    * @param details {module:model/UserDetails} 
    */

    constructor(type, accountId, profilePicture, displayName, operations, details) {
        
        
        this['type'] = type;
        this['accountId'] = accountId;
        this['profilePicture'] = profilePicture;
        this['displayName'] = displayName;
        this['operations'] = operations;
        this['details'] = details;
        
    }

    /**
    * Constructs a <code>WatchUser</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/WatchUser} obj Optional instance to populate.
    * @return {module:model/WatchUser} The populated <code>WatchUser</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WatchUser();
                        
            
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
            if (data.hasOwnProperty('userKey')) {
                obj['userKey'] = ApiClient.convertToType(data['userKey'], 'String');
            }
            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('profilePicture')) {
                obj['profilePicture'] = Icon.constructFromObject(data['profilePicture']);
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('operations')) {
                obj['operations'] = ApiClient.convertToType(data['operations'], [OperationCheckResult]);
            }
            if (data.hasOwnProperty('details')) {
                obj['details'] = UserDetails.constructFromObject(data['details']);
            }
        }
        return obj;
    }

    /**
    * @member {String} type
    */
    type = undefined;
    /**
    * This property is no longer available and will be removed from the documentation soon. Use `accountId` instead. See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
    * @member {String} username
    */
    username = undefined;
    /**
    * This property is no longer available and will be removed from the documentation soon. Use `accountId` instead. See the [deprecation notice](/cloud/confluence/deprecation-notice-user-privacy-api-migration-guide/) for details.
    * @member {String} userKey
    */
    userKey = undefined;
    /**
    * The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, `384093:32b4d9w0-f6a5-3535-11a3-9c8c88d10192`.
    * @member {String} accountId
    */
    accountId = undefined;
    /**
    * @member {module:model/Icon} profilePicture
    */
    profilePicture = undefined;
    /**
    * @member {String} displayName
    */
    displayName = undefined;
    /**
    * @member {Array.<module:model/OperationCheckResult>} operations
    */
    operations = undefined;
    /**
    * @member {module:model/UserDetails} details
    */
    details = undefined;




}
