/**
 * The Confluence Cloud REST API
 * This document describes the REST API and resources provided by Confluence. The REST APIs are for developers who want to integrate Confluence into their application and for administrators who want to script interactions with the Confluence server.Confluence's REST APIs provide access to resources (data entities) via URI paths. To use a REST API, your application will make an HTTP request and parse the response. The response format is JSON. Your methods will be the standard HTTP methods like GET, PUT, POST and DELETE. Because the REST API is based on open standards, you can use any web development language to access the API.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TheConfluenceCloudRestApi);
  }
}(this, function(expect, TheConfluenceCloudRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TheConfluenceCloudRestApi.SearchResult();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SearchResult', function() {
    it('should create an instance of SearchResult', function() {
      // uncomment below and update the code to test SearchResult
      //var instane = new TheConfluenceCloudRestApi.SearchResult();
      //expect(instance).to.be.a(TheConfluenceCloudRestApi.SearchResult);
    });

    it('should have the property content (base name: "content")', function() {
      // uncomment below and update the code to test the property content
      //var instane = new TheConfluenceCloudRestApi.SearchResult();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instane = new TheConfluenceCloudRestApi.SearchResult();
      //expect(instance).to.be();
    });

    it('should have the property excerpt (base name: "excerpt")', function() {
      // uncomment below and update the code to test the property excerpt
      //var instane = new TheConfluenceCloudRestApi.SearchResult();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instane = new TheConfluenceCloudRestApi.SearchResult();
      //expect(instance).to.be();
    });

    it('should have the property resultParentContainer (base name: "resultParentContainer")', function() {
      // uncomment below and update the code to test the property resultParentContainer
      //var instane = new TheConfluenceCloudRestApi.SearchResult();
      //expect(instance).to.be();
    });

    it('should have the property resultGlobalContainer (base name: "resultGlobalContainer")', function() {
      // uncomment below and update the code to test the property resultGlobalContainer
      //var instane = new TheConfluenceCloudRestApi.SearchResult();
      //expect(instance).to.be();
    });

    it('should have the property breadcrumbs (base name: "breadcrumbs")', function() {
      // uncomment below and update the code to test the property breadcrumbs
      //var instane = new TheConfluenceCloudRestApi.SearchResult();
      //expect(instance).to.be();
    });

    it('should have the property entityType (base name: "entityType")', function() {
      // uncomment below and update the code to test the property entityType
      //var instane = new TheConfluenceCloudRestApi.SearchResult();
      //expect(instance).to.be();
    });

    it('should have the property iconCssClass (base name: "iconCssClass")', function() {
      // uncomment below and update the code to test the property iconCssClass
      //var instane = new TheConfluenceCloudRestApi.SearchResult();
      //expect(instance).to.be();
    });

    it('should have the property lastModified (base name: "lastModified")', function() {
      // uncomment below and update the code to test the property lastModified
      //var instane = new TheConfluenceCloudRestApi.SearchResult();
      //expect(instance).to.be();
    });

    it('should have the property friendlyLastModified (base name: "friendlyLastModified")', function() {
      // uncomment below and update the code to test the property friendlyLastModified
      //var instane = new TheConfluenceCloudRestApi.SearchResult();
      //expect(instance).to.be();
    });

  });

}));
